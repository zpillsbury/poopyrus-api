name: Python API CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup Repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Python
        run: uv python install

      - name: Install dependencies
        run: uv sync

      - name: Formatting
        run: uv run black app

      - name: Linting
        run: uv run ruff check app

      - name: Type checker
        run: uv run mypy app

  testing:
    runs-on: ubuntu-latest
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}
      GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      GOOGLE_AUTH_PK: ${{ secrets.GOOGLE_AUTH_PK}}
      GOOGLE_AUTH_CLIENT_EMAIL: ${{ secrets.GOOGLE_AUTH_CLIENT_EMAIL }}
      GOOGLE_AUTH_TOKEN_URI: ${{ secrets.GOOGLE_AUTH_TOKEN_URI }}
      GOOGLE_AUTH_SIGN_IN_KEY: ${{ secrets.GOOGLE_AUTH_SIGN_IN_KEY }}

    steps:
      - name: üèó Setup Repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Python
        run: uv python install

      - name: Install dependencies
        run: uv sync

      - name: Test & Coverage
        run: uv run coverage run --source ./app -m pytest

      - name: Coverage Report
        run: |
          uv run coverage xml
          uv run coverage report -m
